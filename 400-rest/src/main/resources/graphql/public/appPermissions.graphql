# Copyright 2022 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Shield 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

input ApplicationPermissionInput {
  permissionType: AppPermissionType!
  applications: AppFilterInput!
  services: ServicePermissionFilterInput
  environments: EnvPermissionFilterInput
  workflows: WorkflowPermissionFilterInput
  deployments: DeploymentPermissionFilterInput
  pipelines: PipelinePermissionFilterInput
  provisioners: ProvisionerPermissionFilterInput
  templates: TemplatePermissionFilterInput
  actions: [Actions]!
}

type ApplicationPermission {
  permissionType: AppPermissionType
  applications: AppFilter
  actions: [Actions]
  services: ServicePermissionFilter
  environments: EnvPermissionFilter
  workflows: WorkflowPermissionFilter
  deployments: DeploymentPermissionFilter
  pipelines: PipelinePermissionFilter
  provisioners: ProvisionerPermissionFilter
  templates: TemplatePermissionFilter
}

enum AppPermissionType {
  ALL
  ENV
  SERVICE
  WORKFLOW
  PIPELINE
  DEPLOYMENT
  PROVISIONER
  TEMPLATE
}

enum FilterType {
  ALL
}

enum FilterAppType {
  ALL
  SELECTED
  EXCLUDE_SELECTED
}

input AppFilterInput {
  filterType: FilterAppType
  appIds: [String!]
}

type AppFilter {
  filterType: FilterAppType
  appIds: [String]
}

input ServicePermissionFilterInput {
  filterType: FilterType
  serviceIds: [String!]
}

type ServicePermissionFilter {
  filterType: FilterType
  serviceIds: [String]
}

enum EnvFilterType {
  PRODUCTION_ENVIRONMENTS
  NON_PRODUCTION_ENVIRONMENTS
}

type EnvPermissionFilter {
  filterTypes: [EnvFilterType]
  envIds: [String]
}

input EnvPermissionFilterInput {
  filterTypes: [EnvFilterType]
  envIds: [String!]
}

enum WorkflowPermissionFilterType {
  PRODUCTION_WORKFLOWS
  NON_PRODUCTION_WORKFLOWS
  WORKFLOW_TEMPLATES
  ALL_WORKFLOWS
}

type WorkflowPermissionFilter {
  filterTypes: [WorkflowPermissionFilterType]
  envIds: [String]
  workflowIds: [String]
}

input WorkflowPermissionFilterInput {
  filterTypes: [WorkflowPermissionFilterType]
  envIds: [String!]
  workflowIds: [String!]
}

enum DeploymentPermissionFilterType {
  PRODUCTION_ENVIRONMENTS
  NON_PRODUCTION_ENVIRONMENTS
}

input DeploymentPermissionFilterInput {
  filterTypes: [DeploymentPermissionFilterType]
  envIds: [String!]
  # To give permission of pipeline per env. This is behind FF PIPELINE_PER_ENV_DEPLOYMENT_PERMISSION
  executableElementFilter: ExecutableElementFilterInput
}

type DeploymentPermissionFilter {
  filterTypes: [DeploymentPermissionFilterType]
  envIds: [String]
  # To give permission of pipeline per env. This is behind FF PIPELINE_PER_ENV_DEPLOYMENT_PERMISSION
  executableElementFilter: ExecutableElementFilter
}

enum PipelinePermissionFilterType {
  PRODUCTION_PIPELINES
  NON_PRODUCTION_PIPELINES
  ALL_PIPELINES
}

input PipelinePermissionFilterInput {
  filterTypes: [PipelinePermissionFilterType]
  envIds: [String!]
  pipelineIds: [String!]
}

type PipelinePermissionFilter {
  filterTypes: [PipelinePermissionFilterType]
  envIds: [String]
  pipelineIds: [String]
}

input ProvisionerPermissionFilterInput {
  filterType: FilterType
  provisionerIds: [String!]
}

input TemplatePermissionFilterInput {
  filterType: FilterType
  templateIds: [String!]
}

type ProvisionerPermissionFilter {
  filterType: FilterType
  provisionerIds: [String]
}

type TemplatePermissionFilter {
  filterType: FilterType
  templateIds: [String]
}

enum ExecutableElementType {
  PIPELINE
  # Coming soon
  WORKFLOW
}

enum ExecutableElementFilterType {
  ALL
}

input ExecutableElementFilterInput {
  executableElementType: ExecutableElementType!
  ids: [String]
  executableElementFilterType: ExecutableElementFilterType
}

type ExecutableElementFilter {
  executableElementType: ExecutableElementType!
  ids: [String]
  executableElementFilterType: ExecutableElementFilterType
}
