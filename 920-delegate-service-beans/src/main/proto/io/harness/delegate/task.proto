// Copyright 2021 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Shield 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

syntax = "proto3";

package io.harness.delegate;

option java_multiple_files = true;
option go_package = "920_delegate_service_beans";

import "google/protobuf/duration.proto";

// Task global unique identifier
message TaskId {
  string id = 1;
}

// Task global unique identifier
message TaskType {
  string type = 1;
}

// Represents a map of arbitrary key and value pairs that make sense on the task setup level They are pass through for
// the delegate system
message TaskSetupAbstractions {
  map<string, string> values = 1;
}

// This map is used to form base logging key for log service
message TaskLogAbstractions {
  map<string, string> values = 1;
}

// Specifies the execution mode of the task
enum TaskMode {
  MODE_UNSPECIFIED = 0;
  SYNC = 1;
  ASYNC = 2;
}

// Task details represent the object that will be propagated over the wire to the task executor Task executor needs to
// be able to make sense of this data and accomplish the needed work from the task.
// Next ID: 9
message TaskDetails {
  TaskMode mode = 1;

  // Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
  // actual task executor. TODO: more details
  TaskType type = 2;

  // Delegate system allows several way to pass the task parameters
  oneof parameters {
    // Using kryo java serialization, useful for java based task where java annotation play important role of
    // determining encrypted fields and expressions.
    bytes kryo_parameters = 3;
  }

  // Execution time out determines for how long the task should be kept waited on to accomplish its work.
  //
  // NOTE: this time does not include the time the task was in the queue. This is determined independently.
  google.protobuf.Duration execution_timeout = 4;

  // Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
  // will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
  // task execution.
  map<string, string> expressions = 5;

  // The delegate system offers JIT secret decryption. This token allows for making sure that the expressions for
  // obtaining secrets are system generated, and not a hack from customers input.
  int64 expression_functor_token = 6;

  // This is used when we want to save delegate task for future execution, mainly use by ci to execute tasks from lite
  // engine on demand.
  bool parked = 7;
}

// Task selector will be used as one of the ways to decide which delegate can be assigned to the given task
message TaskSelector {
  string selector = 1;
  string origin = 2;
}

message TaskResponseData {
  oneof response_data {
    bytes kryo_results_data = 1;
  }
}
