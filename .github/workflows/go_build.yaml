name: Go Build
on:
  pull_request:
    branches:
      - master
      - develop

env:
  BUILD_PURPOSE: RELEASE
  DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

jobs:
  gobuild:
    name: Go Build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Building expression service code
        run: |
          touch bazel-credentials.bzl
          touch test-util.bzl
          echo "JFROG_USERNAME=\"foo\"" >> bazel-credentials.bzl
          echo "JFROG_PASSWORD=\"bar\"" >> bazel-credentials.bzl
          echo "DISTRIBUTE_TESTING_WORKER=0" >> test-util.bzl
          echo "DISTRIBUTE_TESTING_WORKERS=1" >> test-util.bzl
          echo "OPTIMIZED_PACKAGE_TESTS=0" >> test-util.bzl
          
          echo "Building golang expression service protobuf using bazel..."
          bazel build //870-orchestration/...
      - name: Building product code
        run: |
          echo "Building golang product code using bazel..."
          sudo chmod --recursive ugo+rw /home/runner/
          bazel test //870-orchestration/...
      - name: Coverage
        run: |
          bazel coverage --combined-report=lcov //870-orchestration/...
      - name: Upload
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key java --value-file $(bazel info output_path)/_coverage/_coverage_report.dat
